from zrst import asr

# ## set paths ###
cluster=100
gaussian=1
state=5
target='timit'+'_c'+str(cluster)+'_s'+str(state)+'_g'+str(gaussian)+'/'
#corpus_path = '/home/troutman/Documents/proj2/cmu/wav_1channel/'
#corpus_path = '/home/troutman/Documents/proj2/MLDS_HW1_RELEASE_v1/wav/'
#corpus_path = '/tmp2/b02902077/nchlt_tso/audio/wav_1/'
corpus_path = '/tmp2/b02902077/timit/train/wav/'

target_path = '/tmp2/b02902077/STD/Pattern/Result/' +  target
# init generated by matlab/clusterDetection.m
initial_path = '/tmp2/b02902077/STD/Pattern/zrst/matlab/IDump_timit_'+str(cluster)+'.txt'
config_name = 'test_experiment'

# ## generate pattern ###
# declare object
A = asr.ASR(corpus=corpus_path, target=target_path, dump=initial_path,nState=state)
# initialize
A.initialization(comment=config_name)
# run for several iterations
for i in range (gaussian-1):
	A.iteration('a', config_name)
	# increase gaussian count by 1
	# always use 'a_keep' instead of 'a' when having more than 1 gaussian mixture
	A.iteration('a_mix', config_name)
	A.iteration('a_keep', config_name)
for i in range (30):
	A.iteration('a', config_name)
for i in range (30):
	A.iteration('al', config_name)
for i in range (30):
	A.iteration('ax', config_name)

# ## continue interrupted work ###
# declare object
# A = asr.ASR(corpus=corpus_path, target=target_path, dump=initial_path)
# select interrupted folder
# A.offset = 3
# A.readASR(str(A.offset) + '_' + config_name)
# continue for some iterations
# A.iteration('a', config_name)
